#! /bin/bash

# =======================================================================
# ===== GLOBAL VARIABLES ================================================
# =======================================================================
option_interactive=false
option_verbose=false
option_recursive=false

# =======================================================================
# ===== IF BIN & RESTORE DOES NOT EXIST, CREATE THEM ====================
# =======================================================================
function create_bin() {
    if [ ! -d /$HOME/recyclebin ]; then
        mkdir /$HOME/recyclebin           
    fi    

    if [ ! -e /$HOME/.restore.info ]; then        
        touch /$HOME/.restore.info        
    fi      
    return 0  
}

# =======================================================================
# ===== ERROR MESSAGE ===================================================
# =======================================================================
function display_error() {
    case "$1" in
    "is_directory")
        echo "Unable to recycle directories –- operation aborted"  
        exit 1 ;;  
    "is_self")
        echo "Unable to recycle 'recycle' –- operation aborted" 
        exit 1 ;;
    "no_argument")
        echo "File not provided –- operation aborted" 
        exit 1 ;;
    "no_exists")
        echo "File does not exist –- operation aborted" 
        exit 1 ;;
    esac 
}

# =======================================================================
# ===== VALIDATION TESTS ================================================
# =======================================================================
function validate_has_argument() {    
    if [ $1 -eq 0 ]; then
        display_error "no_argument"        
    fi
    return 0
}

function validate_not_directory() {    
    if [ -d $1]; then
        display_error "is_directory"       
    fi    
    return 0
}

function validate_file_exist() {      
    if [ ! -f $1 ] ; then
        display_error "no_exists"        
    fi
    return 0
}

function validate_not_self() {
    if [[ $1 =~ ^recycle$ ]]; then
        display_error "is_self"        
    fi
    return 0
}

# =======================================================================
# ===== RECYCLE =========================================================
# =======================================================================
function recycle() {
    file_inode="$(ls -i $1 | cut -d' ' -f1)"
    file_path="$(cd "$(dirname "$file_path")"| pwd)"
    file_recycled_name="${1}_${file_inode}"
    file_recycled_entry=$file_recycled_name:$file_path/
    echo $file_recycled_entry >> /$HOME/.restore.info
    mv $1 /$HOME/recyclebin/$file_recycled_name
    echo "Success! -- $1 recycled as $file_recycled_name"
    return 0
}

function recycle_recursive() {
  if [ -d $1 ]; then
    cd $1      
    current_dir=$1
    for file in $(ls); do     

      if [ ! -d $file ]; then
        echo "$file im not dir"
	      validate_not_self $file
        recycle $file        
      fi

      if  [ -d $file ]; then
        echo "$file im aaa dir"           
        recycle_recursive $file  
        echo "1 entry $current_dir"
        echo $(pwd)
        cd ..
        echo "2 entry $current_dir"
        echo $(pwd)
        rmdir $current_dir
      fi

    

    done    

    echo "end"  
    echo "3 entry $current_dir"
    if [ ! $1 ]; then
    echo "final_end"
    fi
    return 0
  fi  
}

# =======================================================================
# ===== SET OPTIONS =====================================================
# =======================================================================
function set_options() {
    while getopts :ivr opt
        do
        case $opt in
            i) option_interactive=true;;
            v) option_verbose=true;;
            r) option_recursive=true;;
            *) echo Bad Option - $OPTARG
            exit 1;;
        esac
    done
}

# =======================================================================
# ===== DO OPTIONS ======================================================
# =======================================================================
function perform_options() {
  if $option_interactive ; then          
    for arg in $input; do
      read -p "Confirm recycle $arg? y/n" confirmation        
      if [[ ! $confirmation =~ ^[Yy] ]]; then
        return 1
      fi            
    done
  fi

  if $option_verbose ; then
    for arg in $input; do
      echo "Attempting to recycle $arg"            
    done
  fi  

  if $option_recursive ; then
    for arg in $input; do
      recycle_recursive $arg     
    done
    return 0
  fi  

  #for arg in $input; do
      #recycle $arg     
  #done  
  
  return 0
}










# =======================================================================
# ===== MAIN ============================================================
# =======================================================================
set_options $@
shift $[OPTIND-1]

input=$@
input_num=$#

create_bin
validate_has_argument $input_num

perform_options $input
	




 
